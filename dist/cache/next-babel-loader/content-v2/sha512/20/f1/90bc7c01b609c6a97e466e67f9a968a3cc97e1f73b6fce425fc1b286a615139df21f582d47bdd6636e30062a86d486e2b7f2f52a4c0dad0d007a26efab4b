{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState, useRef } from 'react';\nimport { useRouter } from 'next/router';\nimport Bleu from '../../../layouts/Bleu';\nimport Link from 'next/link';\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { Card, Button, CardBody, FormGroup, InputGroup, Input } from 'reactstrap';\nimport Captcha from '../../../components/Captcha';\nimport Sinput from '../../../components/forms/Sinput';\nimport { resetPasswordSchema } from '../../../validations';\nimport { resetPassword } from '../../../services/auth.service';\n\nfunction ForgotPassword() {\n  var _router$query, _router$query2;\n\n  const recaptchaRef = useRef();\n  const router = useRouter();\n  const {\n    register,\n    handleSubmit,\n    watch,\n    errors\n  } = useForm({\n    resolver: yupResolver(resetPasswordSchema)\n  });\n  const {\n    0: show,\n    1: setShow\n  } = useState(false);\n  const {\n    0: showc,\n    1: setShowc\n  } = useState(false);\n  const {\n    0: isUpdate,\n    1: updateUserpassword\n  } = useState(false);\n  const {\n    0: verified,\n    1: setVerified\n  } = useState(false);\n  const {\n    0: submitting,\n    1: setSubmitting\n  } = useState(false);\n  const {\n    0: errormsg,\n    1: setErrormsg\n  } = useState(null);\n  const {\n    0: successmsg,\n    1: setSuccessmsg\n  } = useState(null);\n\n  const executeCaptcha = () => setVerified(!verified);\n\n  const handleToggleshow = () => setShow(!show);\n\n  const handleToggleshowc = () => setShowc(!showc);\n\n  if (router.route !== \"/auth/forgotPassword/reset\") {\n    return;\n  }\n\n  const userId = (_router$query = router.query) === null || _router$query === void 0 ? void 0 : _router$query.id;\n  const token = (_router$query2 = router.query) === null || _router$query2 === void 0 ? void 0 : _router$query2.token;\n  console.log('route', router);\n\n  const onSubmit = async data => {\n    let userdata;\n\n    if (verified) {\n      setSubmitting(true);\n      const {\n        password\n      } = data;\n      userdata = {\n        password,\n        userId,\n        token\n      };\n\n      try {\n        let datares = await resetPassword(userdata);\n        console.log('login data', datares);\n        const {\n          data,\n          error,\n          success,\n          message\n        } = datares;\n\n        if (error && !success) {\n          setSuccessmsg(null);\n          setErrormsg(message);\n        } else {\n          setErrormsg(null);\n          setSuccessmsg(message);\n          updateUserpassword(true);\n        }\n\n        console.log(\"data\", data);\n      } catch (err) {\n        console.log(\"error\", err);\n      }\n    } else {\n      alert(\"Vous  n'êtes pas humain\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    children: [/*#__PURE__*/_jsx(\"h3\", {\n      style: {\n        font: 'normal normal bold 30px/35px Ubuntu',\n        color: '#fff',\n        letterSpacing: '0px',\n        marginBottom: '50px'\n      },\n      children: \"R\\xE9cup\\xE9ration de votre mot de passe\"\n    }), isUpdate ? /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsx(\"h2\", {\n        className: \"font-weight-bold\",\n        style: {\n          color: '#fff'\n        },\n        children: \"Connectez vous!\"\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        style: {\n          color: '#fff'\n        },\n        children: [`Votre mot de passe a été restauré`, /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Link, {\n          href: \"/auth/login\",\n          children: /*#__PURE__*/_jsx(\"small\", {\n            style: {\n              color: '#fff',\n              cursor: 'pointer'\n            },\n            children: \"Cliquez ici\"\n          })\n        })]\n      })]\n    }) : /*#__PURE__*/_jsx(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      className: \"d-flex justify-content-center align-items-center\",\n      children: /*#__PURE__*/_jsxs(Card, {\n        style: {\n          width: '450px'\n        },\n        children: [/*#__PURE__*/_jsx(\"small\", {\n          style: {\n            font: 'normal normal bold 14px/16px Ubuntu',\n            margin: '10px auto 0px auto'\n          },\n          children: \"Remplissez le formulaire\"\n        }), /*#__PURE__*/_jsxs(CardBody, {\n          children: [/*#__PURE__*/_jsx(Sinput, {\n            label: \"Nouveau mot de passe\",\n            placeholder: \"Entrez le nouveau mot de passe\",\n            type: show ? \"text\" : \"password\",\n            name: \"password\",\n            icon: show ? \"fa fa-eye\" : \"fa fa-eye-slash\",\n            handleToggleshow: handleToggleshow,\n            append: true,\n            register: register\n          }), errors.password && /*#__PURE__*/_jsx(\"div\", {\n            className: \"text-muted font-italic\",\n            children: /*#__PURE__*/_jsx(\"span\", {\n              className: \"text-danger font-weight-700\",\n              children: errors.password.message\n            })\n          }), /*#__PURE__*/_jsx(Sinput, {\n            label: \"Confirmez le mot de passe\",\n            placeholder: \"Entrez le mot de passe\",\n            type: showc ? \"text\" : \"password\",\n            name: \"confirmpassword\",\n            icon: showc ? \"fa fa-eye\" : \"fa fa-eye-slash\",\n            handleToggleshow: handleToggleshowc,\n            append: true,\n            register: register\n          }), errors.confirmpassword && /*#__PURE__*/_jsx(\"div\", {\n            className: \"text-muted font-italic\",\n            children: /*#__PURE__*/_jsx(\"span\", {\n              className: \"text-danger font-weight-700\",\n              children: errors.confirmpassword.message\n            })\n          }), /*#__PURE__*/_jsx(Captcha, {\n            recaptchaRef: recaptchaRef,\n            onChange: executeCaptcha\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: \"text-center\",\n            children: [errormsg && /*#__PURE__*/_jsx(\"div\", {\n              className: \"text-muted font-italic\",\n              children: /*#__PURE__*/_jsx(\"span\", {\n                className: \"text-danger font-weight-700\",\n                children: errormsg\n              })\n            }), successmsg && /*#__PURE__*/_jsx(\"div\", {\n              className: \"text-muted font-italic\",\n              children: /*#__PURE__*/_jsx(\"span\", {\n                className: \"text-success font-weight-700\",\n                children: successmsg\n              })\n            }), /*#__PURE__*/_jsx(Button, {\n              className: \"mt-3 mb-1\",\n              type: \"submit\",\n              style: {\n                width: '50%',\n                backgroundColor: '#679966',\n                borderColor: '#679966'\n              },\n              children: \"Restaurer\"\n            })]\n          })]\n        })]\n      })\n    })]\n  });\n}\n\nForgotPassword.layout = Bleu;\nexport default ForgotPassword;","map":null,"metadata":{},"sourceType":"module"}